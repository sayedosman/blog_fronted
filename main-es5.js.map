{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/register/register.component.ts","webpack:///src/app/auth/register/register.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/model/post-payload.ts","webpack:///src/app/posts/add-post/add-post.component.ts","webpack:///src/app/posts/add-post/add-post.component.html","webpack:///src/app/posts/post/post.component.ts","webpack:///src/app/posts/post/post.component.html","webpack:///src/app/posts/user-post/user-post.component.ts","webpack:///src/app/posts/user-post/user-post.component.html","webpack:///src/app/service/post_service/post-service.service.ts","webpack:///src/app/service/user_service/auth-service.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","path","component","declarations","providers","bootstrap","LoginComponent","service","router","loginForm","username","required","password","login","get","value","subscribe","data","localStorage","setItem","authenticationToken","console","log","navigateByUrl","success","controls","onSubmit","RegisterComponent","authService","registerForm","email","pattern","confirmPassword","registerPayload","confirm","register","HeaderComponent","logout","HomeComponent","postService","posts","getAllPosts","PostPayload","AddPostComponent","addpostService","body","addPostForm","postPayload","content","addPost","PostComponent","params","PostId","getPost","post","err","UserPostComponent","getAllUserPosts","i","deleteUserpost","window","location","reload","PostServiceService","httpClient","headers","set","getItem","permaLink","providedIn","AuthServiceService","url","pipe","removeItem","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'blog';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { RegisterComponent } from './auth/register/register.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HeaderComponent } from './header/header.component';\nimport { HomeComponent } from './home/home.component';\nimport { RouterModule } from '@angular/router';\nimport { EditorModule } from '@tinymce/tinymce-angular';\nimport { UserPostComponent } from './posts/user-post/user-post.component';\nimport { AddPostComponent } from './posts/add-post/add-post.component';\nimport { PostComponent } from './posts/post/post.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    HeaderComponent,\n    HomeComponent,\n    AddPostComponent,\n    PostComponent,\n    UserPostComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    EditorModule,\n    RouterModule.forRoot([\n      {path: '', component: HomeComponent},\n      {path: 'register', component: RegisterComponent},\n      {path: 'login', component: LoginComponent},\n      {path: 'home', component: HomeComponent},\n      {path: 'add-post', component: AddPostComponent},\n      {path: 'post/:id', component: PostComponent},\n      {path:  'user-post',component:UserPostComponent}\n\n    ])\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport { AuthServiceService } from '../../service/user_service/auth-service.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  success:String\n  constructor(public service: AuthServiceService, private router: Router) {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n  }\n get f(){\n   return this.loginForm.controls;\n }\n  ngOnInit(): void {\n  \n  }\n \n  onSubmit() {\n    this.service.login(this.loginForm.get('username').value,this.loginForm.get('password').value).subscribe(data => {\n      if (data!=null) {\n        localStorage.setItem('authenticationToken',data.authenticationToken)\n        localStorage.setItem('username',data.username)\n        console.log(data.authenticationToken)\n        console.log(data.username)\n        this.router.navigateByUrl('/home');\n      } else {\n        this.success='username and password not vailed'\n        console.log('Login failed');\n      }\n    });\n  }\n}\n","<p>login works!</p>\n<div class=\"container\">\n    <form class=\"form-signin\" [formGroup]=\"loginForm\"    (ngSubmit)=\"onSubmit()\" novalidate>\n      <h1 class=\"h3 mb-3 font-weight-normal\">Please Sign in</h1>\n      <div *ngIf=\"success\" class=\"alert alert-danger\"> {{success}}</div>\n     \n      <div class=\"form-group\">\n         <div *ngIf=\"f.username.touched && f.username.invalid\" class=\"alert alert-danger\">\n          <div *ngIf=\"f.username.errors.required\">Email is required.</div>\n          \n      </div>  \n        <label for=\"inputUsername\" class=\"sr-only\">Username</label>\n        <input type=\"text\" id=\"inputUsername\"   [formControlName]=\"'username'\" ng-model=\"username\" class=\"form-control\" placeholder=\"Username\"   autofocus=\"\">\n      </div>\n      \n\n      <div class=\"form-group\">\n        <div *ngIf=\"f.password.touched && f.password.invalid\" class=\"alert alert-danger\">\n          <div *ngIf=\"f.password.errors.required\">Password is required.</div>\n        \n      </div>  \n        <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n        <input type=\"password\" id=\"inputPassword\"   [formControlName]=\"'password'\" class=\"form-control\" placeholder=\"Password\" >\n      </div>\n      <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\" >Sign in</button>\n    </form>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthServiceService } from '../../service/user_service/auth-service.service';\nimport { RegisterPayload } from '../register-payload';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n \n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup;\n  registerPayload: RegisterPayload;\n  success:String\n  confirm:string\n  constructor( private authService: AuthServiceService, private router:Router) {\n    this.registerForm = new FormGroup({\n      username:  new FormControl('', Validators.required),\n      email:  new FormControl('', [Validators.required,Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]),\n      password:  new FormControl('', Validators.required),\n      confirmPassword:  new FormControl('', Validators.required)\n    });\n    this.registerPayload = {\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\nget f(){\n  return this.registerForm.controls;\n}\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    this.registerPayload.username = this.registerForm.get('username').value;\n    this.registerPayload.email = this.registerForm.get('email').value;\n    this.registerPayload.password = this.registerForm.get('password').value;\n    this.registerPayload.confirmPassword = this.registerForm.get('confirmPassword').value;\n    if(this.registerPayload.confirmPassword!=this.registerPayload.password){\n      console.log(this.registerPayload.confirmPassword);\n      console.log(this.registerPayload.password);\n          this.confirm='not the same password'\n    }\n   else{\n    this.authService.register(this.registerPayload).subscribe(data => {\n      if (data.username!='dublicate') {\n        console.log('register succcess');\n        this.router.navigateByUrl('/login');\n      } else {\n        console.log('register failed');\n        this.success='the same mail are registered'\n      }\n    });}\n  }\n\n}\n","<p>register works!</p>\n<div class=\"container justify-content-center\">\n    <form class=\"form-signin\" [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n      <h1 class=\"h3 mb-3 font-weight-normal\">Please Register</h1>\n      <div *ngIf=\"success\" class=\"alert alert-danger\"> {{success}}</div>\n      <div *ngIf=\"confirm\" class=\"alert alert-danger\"> {{confirm}}</div>\n      <div class=\"form-group\">\n        <div *ngIf=\"f.username.touched && f.username.invalid\" class=\"alert alert-danger\">\n          <div *ngIf=\"f.username.errors.required\">username is required.</div>\n        </div>\n        <label for=\"inputUsername\" class=\"sr-only\">Username</label>\n        <input type=\"text\" id=\"inputUsername\" [formControlName]=\"'username'\" class=\"form-control\" placeholder=\"Username\"  autofocus=\"\">\n      </div>\n      <div class=\"form-group\">\n        <div *ngIf=\"f.email.touched && f.email.invalid\" class=\"alert alert-danger\">\n          <div *ngIf=\"f.email.errors.required\">Email is required.</div>\n          <div *ngIf=\"f.email.errors.pattern\">Email is not valid.</div>\n          </div>\n        <label for=\"inputEmail\" class=\"sr-only\">Email</label>\n        <input type=\"text\" id=\"inputEmail\" [formControlName]=\"'email'\"class=\"form-control\" placeholder=\"Email\"  autofocus=\"\">\n      </div>\n      <div class=\"form-group\">\n        <div *ngIf=\"f.password.touched && f.password.invalid\" class=\"alert alert-danger\">\n          <div *ngIf=\"f.password.errors.required\">Password is required.</div>\n        </div>\n        <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n        <input type=\"password\" id=\"inputPassword\" [formControlName]=\"'password'\" class=\"form-control\" placeholder=\"Password\" >\n      </div>\n      <div class=\"form-group\">\n          <div *ngIf=\"f.confirmPassword.touched && f.confirmPassword.invalid\" class=\"alert alert-danger\">\n            <div *ngIf=\"f.confirmPassword.errors.required\">confirmPassword is required.</div>\n          </div>\n        <label for=\"inputConfirmPassword\" class=\"sr-only\">Password</label>\n        <input type=\"password\" id=\"inputConfirmPassword\" [formControlName]=\"'confirmPassword'\" class=\"form-control\" placeholder=\"Confirm Password\" >\n      </div>\n      <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign up</button>\n    </form>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { AuthServiceService } from '../service/user_service/auth-service.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public authService: AuthServiceService) {\n  }\n\n  ngOnInit() {\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n}\n","<div class=\"header\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <h1><a href=\"\" class=\"title\"> Spring Blog</a></h1>\n        </div> <!-- Title -->\n        <div class=\"col-md-3\" *ngIf=\"authService.isAuthenticated()\">\n            <a href=\"/add-post\" class=\"new-post\">Add Post</a>\n            <a href=\"/user-post\" class=\"new-post\">My Posts</a>\n            <button class=\"logout btn btn-default\" (click)=\"logout()\">Logout</button>\n        </div>\n        <div class=\"col-md-3\" *ngIf=\"!authService.isAuthenticated()\">\n          <a href=\"/login\" class=\"login btn btn-default\">Login</a>\n          <a href=\"/register\" class=\"register btn btn-default\">Register</a>\n        </div> <!-- Login and Register -->\n      </div>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PostPayload } from '../model/post-payload';\nimport { PostServiceService } from '../service/post_service/post-service.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n\n\n  posts: Observable<Array<PostPayload>>;\n  constructor(private postService: PostServiceService) { }\n\n  ngOnInit() {\n    this.posts = this.postService.getAllPosts();\n  }\n\n}\n","<div class=\"content\">\n    <div class=\"container\">\n      <div class=\"row\" *ngFor=\"let post of posts | async\">\n        <div class=\"blogpost\">\n          <h3><a href=\"/post/{{post.id}}\" class=\"blog-title\">{{post.title}}</a></h3>\n          <div>\n            <i class=\"fas fa-user\"></i> Author: {{post.user.username}}\n          </div>\n          <p [innerHTML]=\"post.content\"></p>\n          <div>\n            <a type=\"button\" href=\"/post/{{post.id}}\" class=\"read-more btn btn-default\">Read More</a>\n          </div>\n          <hr>\n        </div>\n        <hr>\n      </div>\n    </div>\n  </div>\n","import { UserPayload } from './user-payload';\n\nexport class PostPayload {\n    id:Number\n    title: String;\n    content: String;\n    createOn:Date\n    user:UserPayload\n  \n}\n","import { Component, OnInit, NgModule } from '@angular/core';\nimport { FormGroup, FormControl, FormsModule, Validators } from '@angular/forms';\nimport { PostPayload } from 'src/app/model/post-payload';\nimport { PostServiceService } from 'src/app/service/post_service/post-service.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-add-post',\n  templateUrl: './add-post.component.html',\n  styleUrls: ['./add-post.component.css']\n})\nexport class AddPostComponent implements OnInit {\n  addPostForm: FormGroup;\n  postPayload: PostPayload;\n  title = new FormControl('', Validators.required)\n  body = new FormControl('', Validators.required)\n  success:String\n  constructor(private addpostService: PostServiceService, private router: Router) {\n    this.addPostForm = new FormGroup({\n      title: this.title,\n      body: this.body\n    });\n    this.postPayload = new PostPayload()\n\n  }\n \n  \n  ngOnInit() {\n  }\n \n  addPost() {\n    this.postPayload.content = this.addPostForm.get('body').value;\n    this.postPayload.title = this.addPostForm.get('title').value;\n    this.addpostService.addPost(this.postPayload).subscribe(data => {\n      if(data.content==this.postPayload.content){\n      console.log('success Response');\n      this.router.navigateByUrl('/home');\n      }else{\n        this.success='duplicate post title : '+this.postPayload.title\n      console.log(data);\n    }})\n  }\n\n}\n","<script src=\"https://cdn.tiny.cloud/1/no-api-key/tinymce/5/tinymce.min.js\" referrerpolicy=\"origin\"></script>\n<script>\n  tinymce.init({\n    selector: '#mytextarea'\n  });\n</script>\n\n<div class=\"add-post-content\">\n    <div class=\"container\">\n      <div>\n        <h3 class=\"new-post-title\">Create New Post</h3>\n      </div>\n      <hr>\n      <form [formGroup]=\"addPostForm\" (ngSubmit)=\"addPost()\" novalidate>\n        <div *ngIf=\"success\" class=\"alert alert-danger\"> {{success}}</div>\n        <div class=\"form-group\">\n          <div *ngIf=\"title.touched && title.invalid\" class=\"alert alert-danger\">\n            <div *ngIf=\"title.errors.required\">title is required.</div>\n          </div>\n          <label class=\"post-title\">Title</label>\n          <input type=\"text\" [formControlName]=\"'title'\" ng-required =\"true\" ng-model=\"title\" class=\"form-control\" placeholder=\"Title\">\n         </div>\n        <div class=\"form-group\">\n          <div *ngIf=\"body.touched && body.invalid\" class=\"alert alert-danger\">\n            <div *ngIf=\"body.errors.required\">body is required.</div>\n          </div>\n          <label class=\"post-content\">Body</label>\n           <editor [formControlName]=\"'body'\" [init]=\"{plugins: 'link'}\"ng-model=\"body\" ng-required =\"true\" ></editor>\n        </div>\n        <div class=\"form-group\">\n          <button type=\"submit\" class=\"btn btn-primary\" >Post</button>\n        </div>\n      </form >\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { PostPayload } from 'src/app/model/post-payload';\nimport { ActivatedRoute } from '@angular/router';\nimport { PostServiceService } from 'src/app/service/post_service/post-service.service';\n\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  post: PostPayload;\n  PostId: Number;\n\n  constructor(private router: ActivatedRoute, private postService: PostServiceService) {\n  }\n\n  ngOnInit() {\n    this.router.params.subscribe(params => {\n      this.PostId = params['id'];\n    });\n    this.postService.getPost(this.PostId).subscribe((data:PostPayload) => {\n      console.log(data.content)\n      this.post = data;\n    },(err: any) => {\n      console.log('Failure Response');\n    })\n  }\n}\n","<div class=\"content\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-1\"></div>\n        <div class=\"col-md-8\">\n\n          <h1 class=\"blog-title\">Title:{{post.title}}</h1>\n          <span>\n                    <p>by {{post.user.username}}</p>\n                </span>\n          <hr>\n          <h1 class=\"blog-content\">Content</h1>\n          <p [innerHTML]=\"post.content\"></p>\n          <hr>\n        </div>\n      </div>\n  \n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { PostServiceService } from 'src/app/service/post_service/post-service.service';\nimport { Observable } from 'rxjs';\nimport { PostPayload } from 'src/app/model/post-payload';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-post',\n  templateUrl: './user-post.component.html',\n  styleUrls: ['./user-post.component.css']\n})\nexport class UserPostComponent implements OnInit {\n  posts:Observable<Array<PostPayload>>;\n  post:PostPayload;\n  constructor(private service:PostServiceService,private router:Router) { }\n\n  ngOnInit(): void {\n   this.posts=this.service.getAllUserPosts();\n  }\n  onclick(i: Number){\n    console.log(i);\n    this.service.deleteUserpost(i).subscribe(() => {console.log(\"deleted\");\n    window.location.reload();\n    \n   } );\n  }\n}\n","<div class=\"content\">\n    <div class=\"container\">\n      <div class=\"row\" *ngFor=\"let post of posts | async  \">\n        <div class=\"blogpost\">\n          <h3><a href=\"/post/{{post.id}}\" class=\"blog-title\">{{post.title}}</a></h3>\n          <div>\n            <i class=\"fas fa-user\"></i> Author: {{post.user.username}}\n          </div>\n          <p [innerHTML]=\"post.content\"></p>\n          <div>\n            <a type=\"button\" href=\"/post/{{post.id}}\" class=\"read-more btn btn-default\">Read More</a>\n          </div>\n          <button type=\"button\" class=\"btn btn-danger\" (click)=\"onclick(post.id)\" >Delete</button>\n          <hr>\n        </div>\n        <hr>\n      </div>\n    </div>\n  </div>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { PostPayload } from '../../model/post-payload';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostServiceService {\n   \n  constructor(public httpClient: HttpClient) {\n  }\n  deleteUserpost(i:Number){\n    const headers = new HttpHeaders().set(\"Authorization\", \"Bearer \"+localStorage.getItem('authenticationToken'));\n    return this.httpClient.delete('http://localhost:8080/api/posts/deletepost/'+ i,{headers});\n  }\n  addPost(postPayload: PostPayload):Observable<PostPayload>{\n    const headers = new HttpHeaders().set(\"Authorization\", \"Bearer \"+localStorage.getItem('authenticationToken'));\n\n    return this.httpClient.post<PostPayload>('http://localhost:8080/api/posts/add',postPayload,{headers});\n  }\n\n  getAllPosts(): Observable<Array<PostPayload>>{\n    const headers = new HttpHeaders().set(\"Authorization\", \"Bearer \"+localStorage.getItem('authenticationToken'));\n\n    return this.httpClient.get<Array<PostPayload>>(\"http://localhost:8080/api/posts/all\",{headers});\n      \n  }\n\n  getPost(permaLink: Number):Observable<PostPayload>{\n    const headers = new HttpHeaders().set(\"Authorization\", \"Bearer \"+localStorage.getItem('authenticationToken'));\n\n    return this.httpClient.get<PostPayload>('http://localhost:8080/api/posts/get/' + permaLink,{headers});\n  }\n  getAllUserPosts():Observable<Array<PostPayload>>{\n    const headers = new HttpHeaders().set(\"Authorization\", \"Bearer \"+localStorage.getItem('authenticationToken'));\n    return this.httpClient.get<Array<PostPayload>>('http://localhost:8080/api/posts/getUserPosts/' + localStorage.getItem('username'),{headers});\n  }\n  \n  \n}\n","import {Injectable} from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { JwtAutResponse } from '../../auth/jwt-aut-response';\nimport { RegisterPayload } from '../../auth/register-payload';\nimport { UserPayload } from '../../model/user-payload';\nimport { Router } from '@angular/router';\n\n \n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthServiceService {\n  private url = 'http://localhost:8080/api/auth/';\n  constructor(private httpClient: HttpClient,private router:Router ) {\n  }\n   getUser(username:string): Observable<UserPayload>{\n    return this.httpClient.get<UserPayload>('http://localhost:8080/api/auth/get/'+username);\n   }\n  register(registerPayload: RegisterPayload): Observable<UserPayload> {\n    return this.httpClient.post<UserPayload>(this.url + 'signup', registerPayload);\n  }\n  login(username:string,password:string): Observable<JwtAutResponse> {\n    const params = new HttpParams()\n    .set('username', username)\n    .set('password', password);\n    return this.httpClient.post<JwtAutResponse>(this.url + 'login', params).pipe();\n  }\n\n  isAuthenticated(): boolean {\n    return localStorage.getItem('username') != null;\n  }\n\n  logout() {\n    localStorage.removeItem('username');\n    this.router.navigateByUrl('/login');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}