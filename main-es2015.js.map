{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/model/post-payload.ts","./src/app/posts/add-post/add-post.component.ts","./src/app/posts/add-post/add-post.component.html","./src/app/posts/post/post.component.ts","./src/app/posts/post/post.component.html","./src/app/posts/user-post/user-post.component.ts","./src/app/posts/user-post/user-post.component.html","./src/app/service/post_service/post-service.service.ts","./src/app/service/user_service/auth-service.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'blog';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { RegisterComponent } from './auth/register/register.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HeaderComponent } from './header/header.component';\nimport { HomeComponent } from './home/home.component';\nimport { RouterModule } from '@angular/router';\nimport { EditorModule } from '@tinymce/tinymce-angular';\nimport { UserPostComponent } from './posts/user-post/user-post.component';\nimport { AddPostComponent } from './posts/add-post/add-post.component';\nimport { PostComponent } from './posts/post/post.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    HeaderComponent,\n    HomeComponent,\n    AddPostComponent,\n    PostComponent,\n    UserPostComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    EditorModule,\n    RouterModule.forRoot([\n      {path: '', component: HomeComponent},\n      {path: 'register', component: RegisterComponent},\n      {path: 'login', component: LoginComponent},\n      {path: 'home', component: HomeComponent},\n      {path: 'add-post', component: AddPostComponent},\n      {path: 'post/:id', component: PostComponent},\n      {path:  'user-post',component:UserPostComponent}\n\n    ])\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport { AuthServiceService } from '../../service/user_service/auth-service.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  success:String\n  constructor(public service: AuthServiceService, private router: Router) {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n  }\n get f(){\n   return this.loginForm.controls;\n }\n  ngOnInit(): void {\n  \n  }\n \n  onSubmit() {\n    this.service.login(this.loginForm.get('username').value,this.loginForm.get('password').value).subscribe(data => {\n      if (data!=null) {\n        localStorage.setItem('authenticationToken',data.authenticationToken)\n        localStorage.setItem('username',data.username)\n        console.log(data.authenticationToken)\n        console.log(data.username)\n        this.router.navigateByUrl('/home');\n      } else {\n        this.success='username and password not vailed'\n        console.log('Login failed');\n      }\n    });\n  }\n}\n","<p>login works!</p>\n<div class=\"container\">\n    <form class=\"form-signin\" [formGroup]=\"loginForm\"    (ngSubmit)=\"onSubmit()\" novalidate>\n      <h1 class=\"h3 mb-3 font-weight-normal\">Please Sign in</h1>\n      <div *ngIf=\"success\" class=\"alert alert-danger\"> {{success}}</div>\n     \n      <div class=\"form-group\">\n         <div *ngIf=\"f.username.touched && f.username.invalid\" class=\"alert alert-danger\">\n          <div *ngIf=\"f.username.errors.required\">Email is required.</div>\n          \n      </div>  \n        <label for=\"inputUsername\" class=\"sr-only\">Username</label>\n        <input type=\"text\" id=\"inputUsername\"   [formControlName]=\"'username'\" ng-model=\"username\" class=\"form-control\" placeholder=\"Username\"   autofocus=\"\">\n      </div>\n      \n\n      <div class=\"form-group\">\n        <div *ngIf=\"f.password.touched && f.password.invalid\" class=\"alert alert-danger\">\n          <div *ngIf=\"f.password.errors.required\">Password is required.</div>\n        \n      </div>  \n        <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n        <input type=\"password\" id=\"inputPassword\"   [formControlName]=\"'password'\" class=\"form-control\" placeholder=\"Password\" >\n      </div>\n      <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\" >Sign in</button>\n    </form>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthServiceService } from '../../service/user_service/auth-service.service';\nimport { RegisterPayload } from '../register-payload';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n \n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup;\n  registerPayload: RegisterPayload;\n  success:String\n  confirm:string\n  constructor( private authService: AuthServiceService, private router:Router) {\n    this.registerForm = new FormGroup({\n      username:  new FormControl('', Validators.required),\n      email:  new FormControl('', [Validators.required,Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]),\n      password:  new FormControl('', Validators.required),\n      confirmPassword:  new FormControl('', Validators.required)\n    });\n    this.registerPayload = {\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\nget f(){\n  return this.registerForm.controls;\n}\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    this.registerPayload.username = this.registerForm.get('username').value;\n    this.registerPayload.email = this.registerForm.get('email').value;\n    this.registerPayload.password = this.registerForm.get('password').value;\n    this.registerPayload.confirmPassword = this.registerForm.get('confirmPassword').value;\n    if(this.registerPayload.confirmPassword!=this.registerPayload.password){\n      console.log(this.registerPayload.confirmPassword);\n      console.log(this.registerPayload.password);\n          this.confirm='not the same password'\n    }\n   else{\n    this.authService.register(this.registerPayload).subscribe(data => {\n      if (data.username!='dublicate') {\n        console.log('register succcess');\n        this.router.navigateByUrl('/login');\n      } else {\n        console.log('register failed');\n        this.success='the same mail are registered'\n      }\n    });}\n  }\n\n}\n","<p>register works!</p>\n<div class=\"container justify-content-center\">\n    <form class=\"form-signin\" [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n      <h1 class=\"h3 mb-3 font-weight-normal\">Please Register</h1>\n      <div *ngIf=\"success\" class=\"alert alert-danger\"> {{success}}</div>\n      <div *ngIf=\"confirm\" class=\"alert alert-danger\"> {{confirm}}</div>\n      <div class=\"form-group\">\n        <div *ngIf=\"f.username.touched && f.username.invalid\" class=\"alert alert-danger\">\n          <div *ngIf=\"f.username.errors.required\">username is required.</div>\n        </div>\n        <label for=\"inputUsername\" class=\"sr-only\">Username</label>\n        <input type=\"text\" id=\"inputUsername\" [formControlName]=\"'username'\" class=\"form-control\" placeholder=\"Username\"  autofocus=\"\">\n      </div>\n      <div class=\"form-group\">\n        <div *ngIf=\"f.email.touched && f.email.invalid\" class=\"alert alert-danger\">\n          <div *ngIf=\"f.email.errors.required\">Email is required.</div>\n          <div *ngIf=\"f.email.errors.pattern\">Email is not valid.</div>\n          </div>\n        <label for=\"inputEmail\" class=\"sr-only\">Email</label>\n        <input type=\"text\" id=\"inputEmail\" [formControlName]=\"'email'\"class=\"form-control\" placeholder=\"Email\"  autofocus=\"\">\n      </div>\n      <div class=\"form-group\">\n        <div *ngIf=\"f.password.touched && f.password.invalid\" class=\"alert alert-danger\">\n          <div *ngIf=\"f.password.errors.required\">Password is required.</div>\n        </div>\n        <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n        <input type=\"password\" id=\"inputPassword\" [formControlName]=\"'password'\" class=\"form-control\" placeholder=\"Password\" >\n      </div>\n      <div class=\"form-group\">\n          <div *ngIf=\"f.confirmPassword.touched && f.confirmPassword.invalid\" class=\"alert alert-danger\">\n            <div *ngIf=\"f.confirmPassword.errors.required\">confirmPassword is required.</div>\n          </div>\n        <label for=\"inputConfirmPassword\" class=\"sr-only\">Password</label>\n        <input type=\"password\" id=\"inputConfirmPassword\" [formControlName]=\"'confirmPassword'\" class=\"form-control\" placeholder=\"Confirm Password\" >\n      </div>\n      <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign up</button>\n    </form>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { AuthServiceService } from '../service/user_service/auth-service.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public authService: AuthServiceService) {\n  }\n\n  ngOnInit() {\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n}\n","<div class=\"header\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <h1><a href=\"\" class=\"title\"> Spring Blog</a></h1>\n        </div> <!-- Title -->\n        <div class=\"col-md-3\" *ngIf=\"authService.isAuthenticated()\">\n            <a href=\"/add-post\" class=\"new-post\">Add Post</a>\n            <a href=\"/user-post\" class=\"new-post\">My Posts</a>\n            <button class=\"logout btn btn-default\" (click)=\"logout()\">Logout</button>\n        </div>\n        <div class=\"col-md-3\" *ngIf=\"!authService.isAuthenticated()\">\n          <a href=\"/login\" class=\"login btn btn-default\">Login</a>\n          <a href=\"/register\" class=\"register btn btn-default\">Register</a>\n        </div> <!-- Login and Register -->\n      </div>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PostPayload } from '../model/post-payload';\nimport { PostServiceService } from '../service/post_service/post-service.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n\n\n  posts: Observable<Array<PostPayload>>;\n  constructor(private postService: PostServiceService) { }\n\n  ngOnInit() {\n    this.posts = this.postService.getAllPosts();\n  }\n\n}\n","<div class=\"content\">\n    <div class=\"container\">\n      <div class=\"row\" *ngFor=\"let post of posts | async\">\n        <div class=\"blogpost\">\n          <h3><a href=\"/post/{{post.id}}\" class=\"blog-title\">{{post.title}}</a></h3>\n          <div>\n            <i class=\"fas fa-user\"></i> Author: {{post.user.username}}\n          </div>\n          <p [innerHTML]=\"post.content\"></p>\n          <div>\n            <a type=\"button\" href=\"/post/{{post.id}}\" class=\"read-more btn btn-default\">Read More</a>\n          </div>\n          <hr>\n        </div>\n        <hr>\n      </div>\n    </div>\n  </div>\n","import { UserPayload } from './user-payload';\n\nexport class PostPayload {\n    id:Number\n    title: String;\n    content: String;\n    createOn:Date\n    user:UserPayload\n  \n}\n","import { Component, OnInit, NgModule } from '@angular/core';\nimport { FormGroup, FormControl, FormsModule, Validators } from '@angular/forms';\nimport { PostPayload } from 'src/app/model/post-payload';\nimport { PostServiceService } from 'src/app/service/post_service/post-service.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-add-post',\n  templateUrl: './add-post.component.html',\n  styleUrls: ['./add-post.component.css']\n})\nexport class AddPostComponent implements OnInit {\n  addPostForm: FormGroup;\n  postPayload: PostPayload;\n  title = new FormControl('', Validators.required)\n  body = new FormControl('', Validators.required)\n  success:String\n  constructor(private addpostService: PostServiceService, private router: Router) {\n    this.addPostForm = new FormGroup({\n      title: this.title,\n      body: this.body\n    });\n    this.postPayload = new PostPayload()\n\n  }\n \n  \n  ngOnInit() {\n  }\n \n  addPost() {\n    this.postPayload.content = this.addPostForm.get('body').value;\n    this.postPayload.title = this.addPostForm.get('title').value;\n    this.addpostService.addPost(this.postPayload).subscribe(data => {\n      if(data.content==this.postPayload.content){\n      console.log('success Response');\n      this.router.navigateByUrl('/home');\n      }else{\n        this.success='duplicate post title : '+this.postPayload.title\n      console.log(data);\n    }})\n  }\n\n}\n","<script src=\"https://cdn.tiny.cloud/1/no-api-key/tinymce/5/tinymce.min.js\" referrerpolicy=\"origin\"></script>\n<script>\n  tinymce.init({\n    selector: '#mytextarea'\n  });\n</script>\n\n<div class=\"add-post-content\">\n    <div class=\"container\">\n      <div>\n        <h3 class=\"new-post-title\">Create New Post</h3>\n      </div>\n      <hr>\n      <form [formGroup]=\"addPostForm\" (ngSubmit)=\"addPost()\" novalidate>\n        <div *ngIf=\"success\" class=\"alert alert-danger\"> {{success}}</div>\n        <div class=\"form-group\">\n          <div *ngIf=\"title.touched && title.invalid\" class=\"alert alert-danger\">\n            <div *ngIf=\"title.errors.required\">title is required.</div>\n          </div>\n          <label class=\"post-title\">Title</label>\n          <input type=\"text\" [formControlName]=\"'title'\" ng-required =\"true\" ng-model=\"title\" class=\"form-control\" placeholder=\"Title\">\n         </div>\n        <div class=\"form-group\">\n          <div *ngIf=\"body.touched && body.invalid\" class=\"alert alert-danger\">\n            <div *ngIf=\"body.errors.required\">body is required.</div>\n          </div>\n          <label class=\"post-content\">Body</label>\n           <editor [formControlName]=\"'body'\" [init]=\"{plugins: 'link'}\"ng-model=\"body\" ng-required =\"true\" ></editor>\n        </div>\n        <div class=\"form-group\">\n          <button type=\"submit\" class=\"btn btn-primary\" >Post</button>\n        </div>\n      </form >\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { PostPayload } from 'src/app/model/post-payload';\nimport { ActivatedRoute } from '@angular/router';\nimport { PostServiceService } from 'src/app/service/post_service/post-service.service';\n\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  post: PostPayload;\n  PostId: Number;\n\n  constructor(private router: ActivatedRoute, private postService: PostServiceService) {\n  }\n\n  ngOnInit() {\n    this.router.params.subscribe(params => {\n      this.PostId = params['id'];\n    });\n    this.postService.getPost(this.PostId).subscribe((data:PostPayload) => {\n      console.log(data.content)\n      this.post = data;\n    },(err: any) => {\n      console.log('Failure Response');\n    })\n  }\n}\n","<div class=\"content\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-1\"></div>\n        <div class=\"col-md-8\">\n\n          <h1 class=\"blog-title\">Title:{{post.title}}</h1>\n          <span>\n                    <p>by {{post.user.username}}</p>\n                </span>\n          <hr>\n          <h1 class=\"blog-content\">Content</h1>\n          <p [innerHTML]=\"post.content\"></p>\n          <hr>\n        </div>\n      </div>\n  \n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { PostServiceService } from 'src/app/service/post_service/post-service.service';\nimport { Observable } from 'rxjs';\nimport { PostPayload } from 'src/app/model/post-payload';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-post',\n  templateUrl: './user-post.component.html',\n  styleUrls: ['./user-post.component.css']\n})\nexport class UserPostComponent implements OnInit {\n  posts:Observable<Array<PostPayload>>;\n  post:PostPayload;\n  constructor(private service:PostServiceService,private router:Router) { }\n\n  ngOnInit(): void {\n   this.posts=this.service.getAllUserPosts();\n  }\n  onclick(i: Number){\n    console.log(i);\n    this.service.deleteUserpost(i).subscribe(() => {console.log(\"deleted\");\n    window.location.reload();\n    \n   } );\n  }\n}\n","<div class=\"content\">\n    <div class=\"container\">\n      <div class=\"row\" *ngFor=\"let post of posts | async  \">\n        <div class=\"blogpost\">\n          <h3><a href=\"/post/{{post.id}}\" class=\"blog-title\">{{post.title}}</a></h3>\n          <div>\n            <i class=\"fas fa-user\"></i> Author: {{post.user.username}}\n          </div>\n          <p [innerHTML]=\"post.content\"></p>\n          <div>\n            <a type=\"button\" href=\"/post/{{post.id}}\" class=\"read-more btn btn-default\">Read More</a>\n          </div>\n          <button type=\"button\" class=\"btn btn-danger\" (click)=\"onclick(post.id)\" >Delete</button>\n          <hr>\n        </div>\n        <hr>\n      </div>\n    </div>\n  </div>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { PostPayload } from '../../model/post-payload';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostServiceService {\n   \n  constructor(public httpClient: HttpClient) {\n  }\n  deleteUserpost(i:Number){\n    const headers = new HttpHeaders().set(\"Authorization\", \"Bearer \"+localStorage.getItem('authenticationToken'));\n    return this.httpClient.delete('http://localhost:8080/api/posts/deletepost/'+ i,{headers});\n  }\n  addPost(postPayload: PostPayload):Observable<PostPayload>{\n    const headers = new HttpHeaders().set(\"Authorization\", \"Bearer \"+localStorage.getItem('authenticationToken'));\n\n    return this.httpClient.post<PostPayload>('http://localhost:8080/api/posts/add',postPayload,{headers});\n  }\n\n  getAllPosts(): Observable<Array<PostPayload>>{\n    const headers = new HttpHeaders().set(\"Authorization\", \"Bearer \"+localStorage.getItem('authenticationToken'));\n\n    return this.httpClient.get<Array<PostPayload>>(\"http://localhost:8080/api/posts/all\",{headers});\n      \n  }\n\n  getPost(permaLink: Number):Observable<PostPayload>{\n    const headers = new HttpHeaders().set(\"Authorization\", \"Bearer \"+localStorage.getItem('authenticationToken'));\n\n    return this.httpClient.get<PostPayload>('http://localhost:8080/api/posts/get/' + permaLink,{headers});\n  }\n  getAllUserPosts():Observable<Array<PostPayload>>{\n    const headers = new HttpHeaders().set(\"Authorization\", \"Bearer \"+localStorage.getItem('authenticationToken'));\n    return this.httpClient.get<Array<PostPayload>>('http://localhost:8080/api/posts/getUserPosts/' + localStorage.getItem('username'),{headers});\n  }\n  \n  \n}\n","import {Injectable} from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { JwtAutResponse } from '../../auth/jwt-aut-response';\nimport { RegisterPayload } from '../../auth/register-payload';\nimport { UserPayload } from '../../model/user-payload';\nimport { Router } from '@angular/router';\n\n \n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthServiceService {\n  private url = 'http://localhost:8080/api/auth/';\n  constructor(private httpClient: HttpClient,private router:Router ) {\n  }\n   getUser(username:string): Observable<UserPayload>{\n    return this.httpClient.get<UserPayload>('http://localhost:8080/api/auth/get/'+username);\n   }\n  register(registerPayload: RegisterPayload): Observable<UserPayload> {\n    return this.httpClient.post<UserPayload>(this.url + 'signup', registerPayload);\n  }\n  login(username:string,password:string): Observable<JwtAutResponse> {\n    const params = new HttpParams()\n    .set('username', username)\n    .set('password', password);\n    return this.httpClient.post<JwtAutResponse>(this.url + 'login', params).pipe();\n  }\n\n  isAuthenticated(): boolean {\n    return localStorage.getItem('username') != null;\n  }\n\n  logout() {\n    localStorage.removeItem('username');\n    this.router.navigateByUrl('/login');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}